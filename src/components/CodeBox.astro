---
import { Code } from "astro:components";
import CopyIcon from "../components/icons/Copy.astro";
import CopyIconCheck from "../components/icons/CopyCheck.astro";
import File from "./icons/File.astro";

let { code, filename, files } = Astro.props;
const framework_icons = {
  React: "/icons/React.svg",
  Astro: "/icons/Astro.svg",
};
---

<section
  class="min-h-[180px] relative border-2 border-slate-800 rounded-xl hover:border-slate-700 group/code transition-colors duration-200 flex flex-col overflow-auto"
  class="min-h-[180px] relative border-2 border-slate-800 rounded-xl hover:border-slate-700 group/code transition-colors duration-200 flex flex-col overflow-auto"
>
  <nav class="flex items-center bg-slate-700">
    {
      files ? (
        files.map((file, index) => (
          <button
            class={`${file.framework} ${index === 0 ? "text-slate-200 bg-slate-800 border-b-2" : "text-slate-400 bg-slate-700"} framework h-full border-indigo-600 px-4 py-2 md:min-w-[150px] text-sm flex items-center justify-center gap-1 cursor-pointer hover:brightness-150`}
            id={file.framework}
          >
            <img src={framework_icons[file.framework]} alt="" class="w-4 h-4" />
            {file.framework}
          </button>
        ))
      ) : (
        <span class="text-slate-200 text-sm px-4 py-2 font-normal flex items-center gap-1">
          <File class="w-4 h-4" />
          {filename}
        </span>
      )
    }
  </nav>
  {
    files ? (
      files.map((comp, i) => (
        <div
          class={`${i !== 0 && "hidden"} flex justify-center w-full h-full codesource ${comp.framework}`}
        >
          <button
            class="copyButton lg:opacity-0 absolute top-[50px] right-3 z-20 group-hover/code:opacity-100 transition-all cursor-pointer rounded-md border-2 border-slate-700 bg-transparent hover:bg-slate-900 active:scale-90 p-2"
            data-code={comp.code}
          >
            <CopyIcon class="h-4 w-4 text-slate-400 copy" />
            <CopyIconCheck class="h-4 w-4 text-slate-200 hidden check" />
          </button>
          <Code
            lang={
              comp.framework === "React" ? "js" : comp.framework.toLowerCase()
            }
            class="rounded-xl px-2 py-3 text-start w-[98%] !bg-slate-950"
            code={comp.code}
            theme="catppuccin-mocha"
          />
        </div>
      ))
    ) : (
      <div class="flex justify-center w-full h-full">
        <button
          class="copyButton opacity-0 absolute top-12 right-3 z-20 group-hover/code:opacity-100 transition-all cursor-pointer rounded-md border-2 border-slate-700 bg-transparent hover:bg-slate-900 active:scale-90 p-2"
          data-code={code}
        >
          <CopyIcon class="h-4 w-4 text-slate-400 copy" />
          <CopyIconCheck class="h-4 w-4 text-slate-200 hidden check" />
        </button>
        <Code
          lang="js"
          class="rounded-xl px-2 py-3 text-start w-[98%] !bg-slate-950"
          code={code}
          theme="catppuccin-mocha"
        />
      </div>
    )
  }
</section>

<script>
  document.addEventListener("astro:page-load", () => {
    const $copyButton = document.querySelectorAll(".copyButton");
    $copyButton.forEach((button) => {
      button.addEventListener("click", function () {
        const $copyIcon = this.children[0];
        const $copyCheckIcon = this.children[1];
        navigator.clipboard.writeText(this.dataset.code);
        $copyIcon.classList.add("hidden");
        $copyCheckIcon.classList.remove("hidden");
        setTimeout(() => {
          $copyIcon.classList.remove("hidden");
          $copyCheckIcon.classList.add("hidden");
        }, 3000);
      });
    });
    const $selectFramework = document.querySelectorAll(".framework");
    const $codesources = document.querySelectorAll(".codesource");
    $selectFramework.forEach((button) => {
      button.addEventListener("click", function () {
        $codesources.forEach((el) => {
          if (el.classList.contains(this.id)) {
            el.classList.remove("hidden");
            $selectFramework.forEach((b) => {
              if (b.classList.contains(this.id)) {
                b.classList.remove("text-slate-300", "bg-slate-700");
                b.classList.add("text-slate-100", "bg-slate-800", "border-b-2");
              } else {
                b.classList.remove(
                  "text-slate-100",
                  "bg-slate-800",
                  "border-b-2"
                );
                b.classList.add("text-slate-300", "bg-slate-700");
              }
            });
          } else {
            el.classList.add("hidden");
          }
        });
      });
    });
  });
</script>
